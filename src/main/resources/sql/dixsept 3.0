Create schema Dixsept3.0;


CREATE TABLE Customers (
  customer_id INT NOT NULL AUTO_INCREMENT,
  first_name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  email VARCHAR(50) NOT NULL,
  phone_number VARCHAR(20) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (customer_id)
);

CREATE TABLE Reservations (
  reservation_id INT NOT NULL AUTO_INCREMENT,
  customer_id INT NOT NULL,
  table_id INT NOT NULL,
  reservation_date_time DATETIME NOT NULL,
  number_of_guests INT NOT NULL,
  special_requests TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (reservation_id),
  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),
  FOREIGN KEY (table_id) REFERENCES Tables(table_id)
);

CREATE TABLE Tables (
  table_id INT NOT NULL AUTO_INCREMENT,
  table_number INT NOT NULL,
  number_of_seats INT NOT NULL,
  location VARCHAR(50) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (table_id)
);



CREATE TABLE Availability (
  availability_id INT NOT NULL AUTO_INCREMENT,
  table_id INT NOT NULL,
  date DATE NOT NULL,
  start_time TIME NOT NULL,
  end_time TIME NOT NULL,
  available BOOLEAN NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (availability_id),
  FOREIGN KEY (table_id) REFERENCES Tables(table_id)
);

CREATE TABLE Bookings (
  booking_id INT NOT NULL AUTO_INCREMENT,
  table_id INT NOT NULL,
  reservation_id INT NOT NULL,
  booked BOOLEAN NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (booking_id),
  FOREIGN KEY (table_id) REFERENCES Tables(table_id),
  FOREIGN KEY (reservation_id) REFERENCES Reservations(reservation_id)
);


-- CREATE TABLE RestaurantStaff (
--   staff_id INT NOT NULL AUTO_INCREMENT,
--   first_name VARCHAR(50) NOT NULL,
--   last_name VARCHAR(50) NOT NULL,
--   job_title VARCHAR(50) NOT NULL,
--   email VARCHAR(50) NOT NULL,
--   phone_number VARCHAR(20) NOT NULL,
--   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--   PRIMARY KEY (staff_id)
-- );

-- CREATE TABLE Payment (
--   payment_id INT NOT NULL AUTO_INCREMENT,
--   reservation_id INT NOT NULL,
--   amount DECIMAL(10, 2) NOT NULL,
--   payment_date DATE NOT NULL,
--   payment_method VARCHAR(50) NOT NULL,
--   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--   PRIMARY KEY (payment_id),
--   FOREIGN KEY (reservation_id) REFERENCES Reservations(reservation_id)
-- );
